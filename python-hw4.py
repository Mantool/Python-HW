#Дан список из чисел и число k, необходимо удалить из !исходного списка все вхождения числа k.
k = 1
numbers = [1, 2, 1, 78, 4, 7, 1]
n = 0
for i in range(len(numbers)):
    if numbers[i] == k:
        x = k
        numbers.append(x)
        numbers.remove(k)
        n += 1
for j in range(n, len(numbers) + 1):
    numbers.remove(k)
print(numbers)

#Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что f_n = A. Если А не является числом Фибоначчи, выведите число -1.
A = int(input())
if A == 0:
    print(0)
else:
    f, b = 0, 1
    n = 1
    while b <= A:
        if b == A:
            print(n)
            break
        f, b = b, f + b
        n += 1
    else:
        print(-1)

#Дан список, найти в нем второй максимум
numbers = [1, 2, 4, 8, 9, 45, 788]
numbers.remove(max(numbers))
print(max(numbers))

# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
numbers = [1, 3, 4, 4, 645, 3]
c = 0
for i in range(len(numbers)):
    for j in range(i + 1, len(numbers)):
        if numbers[i] == numbers[j]:
            c += 1
print(c)

#Дан список. Выведите те его элементы, которые встречаются в списке только один раз. Элементы нужно выводить в том порядке, в котором они встречаются в списке.
numbers = [54, 2, 967, 787, 2, 5, 787]
spisok = []
for k in range(max(numbers)+1):
    x = 0
    spisok.append(x)
for i in range(len(numbers)):
    v = numbers[i]
    spisok[v] += 1
for j in range(len(spisok)):
    if spisok[j] == 1:
        print(j)
#Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.). Если элементов нечетное число, то последний элемент остается на своем месте.
a = [1, 2, 3, 4, 5, 6, 7, 8]
for i in range(1, len(a), 2):
    a[i-1], a[i] = a[i], a[i-1]
print(a)

#Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие правее элемента с индексом k.
#Программа получает на вход список, затем число k. Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров. Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.
numbers = [1, 2, 3, 4, 5, 6, 7, 8]
k = int(input())
for i in range(k + 1, len(numbers)):
    numbers[i - 1] = numbers[i]
numbers.pop()
print(' '.join([str(i) for i in numbers]))

#Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C, сдвинув все элементы, имевшие индекс не менее k, вправо.
#Поскольку при этом количество элементов в списке увеличивается, после считывания списка в его конец нужно будет добавить новый элемент, используя метод append. Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка.
a = [1, 2, 4, 5, 6]
k = int(input())
c = int(input())
a.append(0)
for i in range(len(a) - 1, k, -1):
    a[i] = a[i - 1]
a[k] = c
print(' '.join([str(i) for i in a]))

